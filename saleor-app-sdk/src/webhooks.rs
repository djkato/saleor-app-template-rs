use serde::{Deserialize, Serialize};

#[derive(Debug, Clone, Serialize, Deserialize)]
#[serde(rename_all = "SCREAMING_SNAKE_CASE")]
pub enum AsyncWebhookEventType {
    AccountConfirmationRequested,
    AccountDeleteRequested,
    AddressCreated,
    AddressUpdated,
    AddressDeleted,
    AppInstalled,
    AppUpdated,
    AppDeleted,
    AppStatusChanged,
    AttributeCreated,
    AttributeUpdated,
    AttributeDeleted,
    AttributeValueCreated,
    AttributeValueUpdated,
    AttributeValueDeleted,
    CategoryCreated,
    CategoryUpdated,
    CategoryDeleted,
    ChannelCreated,
    ChannelUpdated,
    ChannelDeleted,
    ChannelStatusChanged,
    GiftCardCreated,
    GiftCardUpdated,
    GiftCardDeleted,
    GiftCardSent,
    GiftCardStatusChanged,
    GiftCardMetadataUpdated,
    MenuCreated,
    MenuUpdated,
    MenuDeleted,
    MenuItemCreated,
    MenuItemUpdated,
    MenuItemDeleted,
    OrderCreated,
    OrderConfirmed,
    OrderPaid,
    OrderFullyPaid,
    OrderRefunded,
    OrderFullyRefunded,
    OrderUpdated,
    OrderCancelled,
    OrderExpired,
    OrderFulfilled,
    OrderMetadataUpdated,
    OrderBulkCreated,
    DraftOrderCreated,
    DraftOrderUpdated,
    DraftOrderDeleted,
    SaleCreated,
    SaleUpdated,
    SaleDeleted,
    SaleToggle,
    InvoiceRequested,
    InvoiceDeleted,
    InvoiceSent,
    CustomerCreated,
    CustomerUpdated,
    CustomerDeleted,
    CustomerMetadataUpdated,
    CollectionCreated,
    CollectionUpdated,
    CollectionDeleted,
    CollectionMetadataUpdated,
    ProductCreated,
    ProductUpdated,
    ProductDeleted,
    ProductMediaCreated,
    ProductMediaUpdated,
    ProductMediaDeleted,
    ProductMetadataUpdated,
    ProductVariantCreated,
    ProductVariantUpdated,
    ProductVariantDeleted,
    ProductVariantOutOfStock,
    ProductVariantBackInStock,
    ProductVariantStockUpdated,
    ProductVariantMetadataUpdated,
    CheckoutCreated,
    CheckoutUpdated,
    CheckoutFullyPaid,
    CheckoutMetadataUpdated,
    FulfillmentCreated,
    FulfillmentCanceled,
    FulfillmentApproved,
    FulfillmentMetadataUpdated,
    NotifyUser,
    PageCreated,
    PageUpdated,
    PageDeleted,
    PageTypeCreated,
    PageTypeUpdated,
    PageTypeDeleted,
    PermissionGroupCreated,
    PermissionGroupUpdated,
    PermissionGroupDeleted,
    ShippingPriceCreated,
    ShippingPriceUpdated,
    ShippingPriceDeleted,
    ShippingZoneCreated,
    ShippingZoneUpdated,
    ShippingZoneDeleted,
    ShippingZoneMetadataUpdated,
    StaffCreated,
    StaffUpdated,
    StaffDeleted,
    TransactionActionRequest,
    TransactionItemMetadataUpdated,
    TranslationCreated,
    TranslationUpdated,
    WarehouseCreated,
    WarehouseUpdated,
    WarehouseDeleted,
    WarehouseMetadataUpdated,
    VoucherCreated,
    VoucherUpdated,
    VoucherDeleted,
    VoucherMetadataUpdated,
    OBSERVABILITY,
    ThumbnailCreated,
}

#[derive(Debug, Clone, Serialize, Deserialize)]
#[serde(rename_all = "SCREAMING_SNAKE_CASE")]
pub enum SyncWebhookEventType {
    CheckoutCalculateTaxes,
    OrderCalculateTaxes,
    ShippingListMethodsForCheckout,
    CheckoutFilterShippingMethods,
    OrderFilterShippingMethods,
    TransactionChargeRequested,
    TransactionRefundRequested,
    TransactionCancelationRequested,
    PaymentGatewayInitializeSession,
    TransactionInitializeSession,
    TransactionProcessSession,
}
#[derive(Debug, Clone, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct WebhookManifest {
    pub name: String,
    #[serde(skip_serializing_if = "Option::is_none")]
    pub async_events: Option<Vec<AsyncWebhookEventType>>,
    #[serde(skip_serializing_if = "Option::is_none")]
    pub sync_events: Option<Vec<SyncWebhookEventType>>,
    /**
     * Query is required for a subscription.
     * If you don't need a payload, you can provide empty query like this:
     *
     * subscription {
     *   event {
     *     __typename
     *   }
     * }
     */
    pub query: String,
    /** The full URL of the endpoint where request will be sent */
    pub target_url: String,
    pub is_active: Option<bool>,
}
